name: Python3

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/python/**/*.py"
      - ".github/workflows/python.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/python/**/*.py"
      - ".github/workflows/python.yml"

jobs:

  check:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: execute black
        id: execute-black
        run: black .

      - name: check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)

      - name: push changes
        id: push-changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.email "23025996+smirror@users.noreply.github.com"
          git config --global user.name "smirror"
          git config pull.rebase true
          git remote set-url origin https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}
          git add .
          git commit -am "Automated Python formatter changes"
          git pull origin ${{github.event.pull_request.head.ref}}
          git push origin HEAD:${{github.event.pull_request.head.ref}}

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero はすべてのエラーを警告として扱う。 GitHub エディタの幅は 127 文字
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        run: |
          pytest
